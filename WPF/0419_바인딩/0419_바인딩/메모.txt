[데이터 바인딩]

데이터(C#)	  : C# 객체
컨텐츠(컨트롤) : WPF에서 지원되는 객체[WPF의 바인딩 시스템이 자동 관리]

1) C#코드에서 바인딩 처리 
[UI -> DATA] : UI의 속성값을 변경하면 데이터의 값이 자동으로 변경된다.

private Person per = new Person("홍길동", "010-1111-1111", 10);

public Window1()
{
   panel.DataContext = per; // 데이터 바인딩
}

<TextBox Name="name" Text="{Binding Path=Name}" Width="120" />

[DATA -> UI] : 데이터의 속성이 변경된 사실을 WPF 바인딩시스템에 알려줘야한다.
class Person : INotifyPropertyChanged
{
    public event PropertyChangedEventHandler PropertyChanged;

    private string name;
    public string Name 
    {
        get { return name; }
        set 
        {
            name = value;
            if (PropertyChanged != null)
                PropertyChanged(this, new PropertyChangedEventArgs("Name"));
        }
    }
}
========================================================

[데이터 아일랜드]
XAML코드에서 데이터 리소스 객체를 정의

private Person per = new Person("홍길동", "010-1111-1111", 10);
-> 위에 C#코드를 XAML생성

1)정적 리소스
<Window.Resouces>
    <Local:Person x:Key="per" Name="홍길동" Phone="010-1111-1111" Age=10/>>
</Window.Resouces>

2)C#코드 사용
Person per = null;
public MainWindow()
{
    per = (Person)FindResource("per");
}

3)데이터 바인딩
<StackPanul DataContext="{StaticResource per}" >