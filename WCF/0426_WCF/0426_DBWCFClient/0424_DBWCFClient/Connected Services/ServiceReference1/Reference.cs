//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _0424_DBWCFClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Member", Namespace="http://schemas.datacontract.org/2004/07/_0426_DBWCF")]
    [System.SerializableAttribute()]
    public partial class Member : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MemberNameField;
        
        private string MemberPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string MemberName {
            get {
                return this.MemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberNameField, value) != true)) {
                    this.MemberNameField = value;
                    this.RaisePropertyChanged("MemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string MemberPhone {
            get {
                return this.MemberPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberPhoneField, value) != true)) {
                    this.MemberPhoneField = value;
                    this.RaisePropertyChanged("MemberPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMemberService")]
    public interface IMemberService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/InsertMember", ReplyAction="http://tempuri.org/IMemberService/InsertMemberResponse")]
        bool InsertMember(string name, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/InsertMember", ReplyAction="http://tempuri.org/IMemberService/InsertMemberResponse")]
        System.Threading.Tasks.Task<bool> InsertMemberAsync(string name, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/SelectMember", ReplyAction="http://tempuri.org/IMemberService/SelectMemberResponse")]
        _0424_DBWCFClient.ServiceReference1.Member SelectMember(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/SelectMember", ReplyAction="http://tempuri.org/IMemberService/SelectMemberResponse")]
        System.Threading.Tasks.Task<_0424_DBWCFClient.ServiceReference1.Member> SelectMemberAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/SelectAllMember", ReplyAction="http://tempuri.org/IMemberService/SelectAllMemberResponse")]
        _0424_DBWCFClient.ServiceReference1.Member[] SelectAllMember();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/SelectAllMember", ReplyAction="http://tempuri.org/IMemberService/SelectAllMemberResponse")]
        System.Threading.Tasks.Task<_0424_DBWCFClient.ServiceReference1.Member[]> SelectAllMemberAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMemberServiceChannel : _0424_DBWCFClient.ServiceReference1.IMemberService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberServiceClient : System.ServiceModel.ClientBase<_0424_DBWCFClient.ServiceReference1.IMemberService>, _0424_DBWCFClient.ServiceReference1.IMemberService {
        
        public MemberServiceClient() {
        }
        
        public MemberServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MemberServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MemberServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MemberServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertMember(string name, string phone) {
            return base.Channel.InsertMember(name, phone);
        }
        
        public System.Threading.Tasks.Task<bool> InsertMemberAsync(string name, string phone) {
            return base.Channel.InsertMemberAsync(name, phone);
        }
        
        public _0424_DBWCFClient.ServiceReference1.Member SelectMember(string name) {
            return base.Channel.SelectMember(name);
        }
        
        public System.Threading.Tasks.Task<_0424_DBWCFClient.ServiceReference1.Member> SelectMemberAsync(string name) {
            return base.Channel.SelectMemberAsync(name);
        }
        
        public _0424_DBWCFClient.ServiceReference1.Member[] SelectAllMember() {
            return base.Channel.SelectAllMember();
        }
        
        public System.Threading.Tasks.Task<_0424_DBWCFClient.ServiceReference1.Member[]> SelectAllMemberAsync() {
            return base.Channel.SelectAllMemberAsync();
        }
    }
}
