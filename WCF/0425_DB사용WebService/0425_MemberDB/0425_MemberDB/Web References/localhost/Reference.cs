//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace _0425_MemberDB.localhost {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MemberServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MemberService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FunctionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MemberService() {
            this.Url = global::_0425_MemberDB.Properties.Settings.Default._0425_MemberDB_localhost_MemberService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertMemberCompletedEventHandler InsertMemberCompleted;
        
        /// <remarks/>
        public event SelectAllMemberCompletedEventHandler SelectAllMemberCompleted;
        
        /// <remarks/>
        public event SelectMemberCompletedEventHandler SelectMemberCompleted;
        
        /// <remarks/>
        public event FunctionCompletedEventHandler FunctionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertMember(string name, string phone) {
            object[] results = this.Invoke("InsertMember", new object[] {
                        name,
                        phone});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMemberAsync(string name, string phone) {
            this.InsertMemberAsync(name, phone, null);
        }
        
        /// <remarks/>
        public void InsertMemberAsync(string name, string phone, object userState) {
            if ((this.InsertMemberOperationCompleted == null)) {
                this.InsertMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMemberOperationCompleted);
            }
            this.InvokeAsync("InsertMember", new object[] {
                        name,
                        phone}, this.InsertMemberOperationCompleted, userState);
        }
        
        private void OnInsertMemberOperationCompleted(object arg) {
            if ((this.InsertMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMemberCompleted(this, new InsertMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Member[] SelectAllMember() {
            object[] results = this.Invoke("SelectAllMember", new object[0]);
            return ((Member[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllMemberAsync() {
            this.SelectAllMemberAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllMemberAsync(object userState) {
            if ((this.SelectAllMemberOperationCompleted == null)) {
                this.SelectAllMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllMemberOperationCompleted);
            }
            this.InvokeAsync("SelectAllMember", new object[0], this.SelectAllMemberOperationCompleted, userState);
        }
        
        private void OnSelectAllMemberOperationCompleted(object arg) {
            if ((this.SelectAllMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllMemberCompleted(this, new SelectAllMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Member SelectMember(string name) {
            object[] results = this.Invoke("SelectMember", new object[] {
                        name});
            return ((Member)(results[0]));
        }
        
        /// <remarks/>
        public void SelectMemberAsync(string name) {
            this.SelectMemberAsync(name, null);
        }
        
        /// <remarks/>
        public void SelectMemberAsync(string name, object userState) {
            if ((this.SelectMemberOperationCompleted == null)) {
                this.SelectMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMemberOperationCompleted);
            }
            this.InvokeAsync("SelectMember", new object[] {
                        name}, this.SelectMemberOperationCompleted, userState);
        }
        
        private void OnSelectMemberOperationCompleted(object arg) {
            if ((this.SelectMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMemberCompleted(this, new SelectMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Function", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Function() {
            object[] results = this.Invoke("Function", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FunctionAsync() {
            this.FunctionAsync(null);
        }
        
        /// <remarks/>
        public void FunctionAsync(object userState) {
            if ((this.FunctionOperationCompleted == null)) {
                this.FunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFunctionOperationCompleted);
            }
            this.InvokeAsync("Function", new object[0], this.FunctionOperationCompleted, userState);
        }
        
        private void OnFunctionOperationCompleted(object arg) {
            if ((this.FunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FunctionCompleted(this, new FunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Member {
        
        private string nameField;
        
        private string phoneField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertMemberCompletedEventHandler(object sender, InsertMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SelectAllMemberCompletedEventHandler(object sender, SelectAllMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Member[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Member[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SelectMemberCompletedEventHandler(object sender, SelectMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Member Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Member)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FunctionCompletedEventHandler(object sender, FunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591